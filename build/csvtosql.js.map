{
  "version": 3,
  "sources": ["../csvtosql.js"],
  "sourcesContent": ["import { access } from 'fs/promises'\nimport { constants, createReadStream } from 'fs'\nimport split2 from 'split2'\nimport events from 'events'\n\nconst emitter = new events.EventEmitter()\n\n;(() => {\n  const ctx = {\n    _init: new Date(),\n    args: process.argv,\n  }\n\n  emitter.on('start', () => console.log('stating engine'))\n\n  csvtosql.call(ctx)\n  emitter.emit('start', ctx)\n})()\n\nasync function csvtosql() {\n  const { args } = this\n\n  const usage = () =>\n    process.stdout.write(` \nPlease provide a path to the file you want to convert!\nUsage:\n  \t--source | -s [dir] select the source file or directory\n  \t--help | -h [dir] get help\n  \t--version | -v [dir] get the current version\n  \t`)\n\n  if (args.length < 3) {\n    usage()\n    process.exit(1)\n  }\n  if (args.find((arg) => arg === '--help' || arg === '-h')) {\n    usage()\n    process.exit(0)\n  }\n\n  if (args.find((arg) => arg === '--version' || arg === '-v')) {\n    process.stdout.write(`v1.0.0 - csvtosql`)\n    process.exit(0)\n  }\n\n  if (args.find((arg) => arg === '--source' || arg === '-s')) {\n    if (\n      args[args.indexOf('--source') + 1] === undefined ||\n      args[args.indexOf('-s') + 1] === undefined\n    ) {\n      process.stdout.write(`\n\t --source | -s [dir] select the source file or directory\n\t `)\n    } else if (args[args.indexOf('-s') + 1].endsWith('.csv')) {\n      this.source = args[args.indexOf('-s') + 1]\n      console.log(`source ${this.source}`)\n    }\n  }\n\n  await access(this.source, constants.R_OK | constants.W_OK).catch((e) => {\n    throw new Error(`${this.source} is not readable or writable`)\n  })\n\n  let count = 0\n  const isEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  const isNumber = /^[0-9]+$/\n  const isDate = /^\\d{4}-\\d{2}-\\d{2}$/\n  const isTime = /^\\d{2}:\\d{2}:\\d{2}$/\n  const isDateTime = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}$/\n  const isBoolean = /^(true|false)$/\n  const isString = /^[^\\s]+$/\n  const isEmpty = /^$/\n\n  createReadStream(this.source)\n    .pipe(split2())\n    .on('data', (line) => {\n      count++\n      if (count === 1) {\n        // this code is a menace\n        this.headers = line.split(',').map((col) => {\n          if (col.match(/^[0-9]+$/)) return `${col} INT`\n\n          if (col.match(/^[0-9]+\\.[0-9]+$/)) return `${col} FLOAT`\n          if (col.match(isEmail)) return `${col} TEXT`\n          if (col.match(isNumber)) return `${col} INT`\n          if (col.match(isDate)) return `${col} DATE`\n          if (col.match(isTime)) return `${col} TIME`\n          if (col.match(isDateTime)) return `${col} DATETIME`\n          if (col.match(isBoolean)) return `${col} BOOLEAN`\n          if (col.match(isString)) return `${col} TEXT`\n          if (col.match(isEmpty)) return `${col} TEXT`\n          return `${col} TEXT`\n        })\n      }\n    })\n    .on('end', () => {\n      console.log(`File processed ${this.source}`)\n      console.log(`${this.headers.length} headers found`)\n      console.log(`${count} lines processed`)\n      console.log(`${new Date().getTime() - this._init.getTime()} ms elapsed`)\n      createTable()\n    })\n\n  const createTable = () => {\n    const inStatement = `${this.headers.map((h) => `${h}`)}`\n    const createStatement = `CREATE TABLE IF NOT EXISTS ${'HUHHH'} (${inStatement})`\n    console.log(createStatement)\n    return createStatement\n  }\n}\n"],
  "mappings": "koBAAA,MAAuB,0BACvB,EAA4C,iBAC5C,EAAmB,qBACnB,EAAmB,qBAEb,EAAU,GAAI,WAAO,aAE1B,AAAC,KAAM,CACN,GAAM,GAAM,CACV,MAAO,GAAI,MACX,KAAM,QAAQ,MAGhB,EAAQ,GAAG,QAAS,IAAM,QAAQ,IAAI,mBAEtC,EAAS,KAAK,GACd,EAAQ,KAAK,QAAS,OAGxB,kBAA0B,CACxB,GAAM,CAAE,QAAS,KAEX,EAAQ,IACZ,QAAQ,OAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQvB,AAAI,EAAK,OAAS,GAChB,KACA,QAAQ,KAAK,IAEX,EAAK,KAAK,AAAC,GAAQ,IAAQ,UAAY,IAAQ,OACjD,KACA,QAAQ,KAAK,IAGX,EAAK,KAAK,AAAC,GAAQ,IAAQ,aAAe,IAAQ,OACpD,SAAQ,OAAO,MAAM,qBACrB,QAAQ,KAAK,IAGX,EAAK,KAAK,AAAC,GAAQ,IAAQ,YAAc,IAAQ,OACnD,CACE,EAAK,EAAK,QAAQ,YAAc,KAAO,QACvC,EAAK,EAAK,QAAQ,MAAQ,KAAO,OAEjC,QAAQ,OAAO,MAAM;AAAA;AAAA,KAGZ,EAAK,EAAK,QAAQ,MAAQ,GAAG,SAAS,SAC/C,MAAK,OAAS,EAAK,EAAK,QAAQ,MAAQ,GACxC,QAAQ,IAAI,UAAU,KAAK,YAI/B,KAAM,aAAO,KAAK,OAAQ,YAAU,KAAO,YAAU,MAAM,MAAM,AAAC,GAAM,CACtE,KAAM,IAAI,OAAM,GAAG,KAAK,wCAG1B,GAAI,GAAQ,EACN,EAAU,6BACV,EAAW,WACX,EAAS,sBACT,EAAS,sBACT,EAAa,wCACb,EAAY,iBACZ,EAAW,WACX,EAAU,KAEhB,uBAAiB,KAAK,QACnB,KAAK,iBACL,GAAG,OAAQ,AAAC,GAAS,CACpB,IACI,IAAU,GAEZ,MAAK,QAAU,EAAK,MAAM,KAAK,IAAI,AAAC,GAC9B,EAAI,MAAM,YAAoB,GAAG,QAEjC,EAAI,MAAM,oBAA4B,GAAG,UACzC,EAAI,MAAM,GAAiB,GAAG,SAC9B,EAAI,MAAM,GAAkB,GAAG,QAC/B,EAAI,MAAM,GAAgB,GAAG,SAC7B,EAAI,MAAM,GAAgB,GAAG,SAC7B,EAAI,MAAM,GAAoB,GAAG,aACjC,EAAI,MAAM,GAAmB,GAAG,YAChC,EAAI,MAAM,GAAkB,GAAG,SAC/B,EAAI,MAAM,GAAiB,GAAG,SAC3B,GAAG,aAIf,GAAG,MAAO,IAAM,CACf,QAAQ,IAAI,kBAAkB,KAAK,UACnC,QAAQ,IAAI,GAAG,KAAK,QAAQ,wBAC5B,QAAQ,IAAI,GAAG,qBACf,QAAQ,IAAI,GAAG,GAAI,QAAO,UAAY,KAAK,MAAM,wBACjD,MAGJ,GAAM,GAAc,IAAM,CAExB,GAAM,GAAkB,qCADJ,GAAG,KAAK,QAAQ,IAAI,AAAC,GAAM,GAAG,UAElD,eAAQ,IAAI,GACL",
  "names": []
}
